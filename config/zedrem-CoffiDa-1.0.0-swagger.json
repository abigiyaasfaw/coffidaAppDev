{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/zedrem/CoffiDa/1.0.0"
  } ],
  "info" : {
    "description" : "CoffiDa is platform for reviewing the best local coffee spots. Anybody can use CoffiDa for finding the best local Café’s, but Users who sign up for an account can also publish reviews. Reviews consist of a series of ratings (e.g. quality, price, cleanliness) along with a short body of text for describing their experience. Users can also comment on, and ‘like’ other reviews.",
    "version" : "1.0.0",
    "title" : "CoffiDa API",
    "contact" : {
      "name" : "Ashley Williams",
      "email" : "ashley.williams@mmu.ac.uk"
    }
  },
  "tags" : [ {
    "name" : "User Management",
    "description" : "Operations available for users to manage their accounts"
  }, {
    "name" : "Location Reviews",
    "description" : "Operations available for users to manage their reviews"
  }, {
    "name" : "Location Management",
    "description" : "Operations available for finding managing, viewing and finding locations"
  } ],
  "paths" : {
    "/user" : {
      "post" : {
        "tags" : [ "User Management" ],
        "summary" : "Add a new user",
        "operationId" : "addUser",
        "description" : "Will create a new user in the system. \n\nEmail must be valid and password must be greater than 5 characters.\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddUser"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "User Management" ],
        "summary" : "Log into an account",
        "operationId" : "loginUser",
        "description" : "Will log a user into their account\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid email/password supplied"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/user/logout" : {
      "post" : {
        "tags" : [ "User Management" ],
        "summary" : "Log out of an account",
        "operationId" : "logoutUser",
        "description" : "Will log a user out of their account\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/user/{usr_id}" : {
      "get" : {
        "tags" : [ "User Management" ],
        "summary" : "Get user information",
        "operationId" : "getUser",
        "description" : "Retrieve all of the information about a user\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/usr_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FullUser"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "User Management" ],
        "summary" : "Update user information",
        "operationId" : "updateUser",
        "description" : "Update a users profile/password\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/usr_id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/location/{loc_id}/review" : {
      "post" : {
        "tags" : [ "Location Reviews" ],
        "summary" : "Add a new review",
        "operationId" : "addReview",
        "description" : "Will create a new review in the system\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddReview"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/location/{loc_id}/review/{rev_id}" : {
      "patch" : {
        "tags" : [ "Location Reviews" ],
        "summary" : "Update a review",
        "operationId" : "updateReview",
        "description" : "Update an existing review\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        }, {
          "$ref" : "#/components/parameters/rev_id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateReview"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Location Reviews" ],
        "summary" : "Delete a review",
        "operationId" : "deleteReview",
        "description" : "Delete an existing review\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        }, {
          "$ref" : "#/components/parameters/rev_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/location/{loc_id}/review/{rev_id}/photo" : {
      "post" : {
        "tags" : [ "Location Reviews" ],
        "summary" : "Add a photo to a review",
        "operationId" : "addReviewPhoto",
        "description" : "Add a photo to an existing review\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        }, {
          "$ref" : "#/components/parameters/rev_id"
        } ],
        "requestBody" : {
          "content" : {
            "image/png" : {
              "schema" : {
                "$ref" : "#/components/schemas/BinaryImageFile"
              }
            },
            "image/jpeg" : {
              "schema" : {
                "$ref" : "#/components/schemas/BinaryImageFile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Location Reviews" ],
        "summary" : "Delete a photo from a review",
        "operationId" : "deleteReviewPhoto",
        "description" : "Remove a photo from an existing review\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        }, {
          "$ref" : "#/components/parameters/rev_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/location/{loc_id}/review/{rev_id}/like" : {
      "post" : {
        "tags" : [ "Location Reviews" ],
        "summary" : "Like a review",
        "operationId" : "addReviewLike",
        "description" : "Add a like to an existing review\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        }, {
          "$ref" : "#/components/parameters/rev_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Location Reviews" ],
        "summary" : "Remove a like from a review",
        "operationId" : "deleteReviewLike",
        "description" : "Remove a like from an existing review\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        }, {
          "$ref" : "#/components/parameters/rev_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/location/{loc_id}" : {
      "get" : {
        "tags" : [ "Location Management" ],
        "summary" : "Get location info",
        "operationId" : "getLocation",
        "description" : "Get all information and reviews from a location\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/location/{loc_id}/favourite" : {
      "post" : {
        "tags" : [ "Location Management" ],
        "summary" : "Favourite a location",
        "operationId" : "addLocationFavourite",
        "description" : "Add a location to list of favourites\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Location Management" ],
        "summary" : "Unfavourite a location",
        "operationId" : "deleteLocationFavourite",
        "description" : "Remove a location from list of favourites\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/loc_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/find" : {
      "get" : {
        "tags" : [ "Location Management" ],
        "summary" : "Find locations",
        "operationId" : "searchLocations",
        "description" : "Search the list of locations\n",
        "security" : [ {
          "User" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/q"
        }, {
          "$ref" : "#/components/parameters/overall_rating"
        }, {
          "$ref" : "#/components/parameters/price_rating"
        }, {
          "$ref" : "#/components/parameters/quality_rating"
        }, {
          "$ref" : "#/components/parameters/clenliness_rating"
        }, {
          "$ref" : "#/components/parameters/search_in"
        }, {
          "$ref" : "#/components/parameters/limit"
        }, {
          "$ref" : "#/components/parameters/offset"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListLocatons"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorised"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "usr_id" : {
        "name" : "usr_id",
        "in" : "path",
        "description" : "A unique integer ID for identifying a User",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      },
      "loc_id" : {
        "name" : "loc_id",
        "in" : "path",
        "description" : "A unique integer ID for identifying a Location",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      },
      "rev_id" : {
        "name" : "rev_id",
        "in" : "path",
        "description" : "A unique integer ID for identifying a Review",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      },
      "q" : {
        "name" : "q",
        "in" : "query",
        "description" : "The query string to search for",
        "required" : false,
        "schema" : {
          "type" : "string",
          "example" : "Aunt Mary"
        }
      },
      "overall_rating" : {
        "name" : "overall_rating",
        "in" : "query",
        "description" : "Filter by ratings",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 5,
          "example" : 3
        }
      },
      "price_rating" : {
        "name" : "price_rating",
        "in" : "query",
        "description" : "Filter by ratings",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 5,
          "example" : 3
        }
      },
      "quality_rating" : {
        "name" : "quality_rating",
        "in" : "query",
        "description" : "Filter by ratings",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 5,
          "example" : 3
        }
      },
      "clenliness_rating" : {
        "name" : "clenliness_rating",
        "in" : "query",
        "description" : "Filter by ratings",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 5,
          "example" : 3
        }
      },
      "search_in" : {
        "name" : "search_in",
        "in" : "query",
        "description" : "Only include locations in your one of your lists",
        "required" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "favourite", "liked", "reviewed" ]
        }
      },
      "limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "The number of items to return",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 1,
          "maximum" : 100,
          "default" : 20
        }
      },
      "offset" : {
        "name" : "offset",
        "in" : "query",
        "description" : "The number of items to skip before starting to collect the result set (e.g. for pagination)",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 0,
          "default" : 0
        }
      }
    },
    "schemas" : {
      "location_id" : {
        "type" : "integer",
        "example" : 73
      },
      "location_name" : {
        "type" : "string",
        "example" : "Aunt Mary's Great Coffee Shop"
      },
      "location_town" : {
        "type" : "string",
        "example" : "London"
      },
      "latitude" : {
        "type" : "number",
        "minimum" : -90,
        "maximum" : 90,
        "example" : 74.567
      },
      "longitude" : {
        "type" : "number",
        "minimum" : -180,
        "maximum" : 180,
        "example" : 102.435
      },
      "photo_path" : {
        "type" : "string",
        "example" : "http://cdn.coffida.com/images/78346822.jpg"
      },
      "avg_overall_rating" : {
        "type" : "number",
        "minimum" : 0.0,
        "maximum" : 5.0,
        "example" : 4.5
      },
      "avg_price_rating" : {
        "type" : "number",
        "minimum" : 0.0,
        "maximum" : 5.0,
        "example" : 4.3
      },
      "avg_quality_rating" : {
        "type" : "number",
        "minimum" : 0.0,
        "maximum" : 5.0,
        "example" : 4.0
      },
      "avg_clenliness_rating" : {
        "type" : "number",
        "minimum" : 0.0,
        "maximum" : 5.0,
        "example" : 3.8
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "location_id" : {
            "$ref" : "#/components/schemas/location_id"
          },
          "location_name" : {
            "$ref" : "#/components/schemas/location_name"
          },
          "location_town" : {
            "$ref" : "#/components/schemas/location_town"
          },
          "latitude" : {
            "$ref" : "#/components/schemas/latitude"
          },
          "longitude" : {
            "$ref" : "#/components/schemas/longitude"
          },
          "photo_path" : {
            "$ref" : "#/components/schemas/photo_path"
          },
          "avg_overall_rating" : {
            "$ref" : "#/components/schemas/avg_overall_rating"
          },
          "avg_price_rating" : {
            "$ref" : "#/components/schemas/avg_price_rating"
          },
          "avg_quality_rating" : {
            "$ref" : "#/components/schemas/avg_quality_rating"
          },
          "avg_clenliness_rating" : {
            "$ref" : "#/components/schemas/avg_clenliness_rating"
          },
          "location_reviews" : {
            "$ref" : "#/components/schemas/ListReviews"
          }
        }
      },
      "LocationWithoutReview" : {
        "type" : "object",
        "properties" : {
          "location_id" : {
            "$ref" : "#/components/schemas/location_id"
          },
          "location_name" : {
            "$ref" : "#/components/schemas/location_name"
          },
          "location_town" : {
            "$ref" : "#/components/schemas/location_town"
          },
          "latitude" : {
            "$ref" : "#/components/schemas/latitude"
          },
          "longitude" : {
            "$ref" : "#/components/schemas/longitude"
          },
          "photo_path" : {
            "$ref" : "#/components/schemas/photo_path"
          },
          "avg_overall_rating" : {
            "$ref" : "#/components/schemas/avg_overall_rating"
          },
          "avg_price_rating" : {
            "$ref" : "#/components/schemas/avg_price_rating"
          },
          "avg_quality_rating" : {
            "$ref" : "#/components/schemas/avg_quality_rating"
          },
          "avg_clenliness_rating" : {
            "$ref" : "#/components/schemas/avg_clenliness_rating"
          }
        }
      },
      "ListLocatons" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Location"
        }
      },
      "review_id" : {
        "type" : "integer",
        "example" : 643
      },
      "overall_rating" : {
        "type" : "integer",
        "example" : 4,
        "minimum" : 0,
        "maximum" : 5
      },
      "price_rating" : {
        "type" : "integer",
        "example" : 2,
        "minimum" : 0,
        "maximum" : 5
      },
      "quality_rating" : {
        "type" : "integer",
        "example" : 3,
        "minimum" : 0,
        "maximum" : 5
      },
      "clenliness_rating" : {
        "type" : "integer",
        "example" : 5,
        "minimum" : 0,
        "maximum" : 5
      },
      "review_body" : {
        "type" : "string",
        "example" : "Great coffee, but the bathrooms stank!"
      },
      "likes" : {
        "type" : "integer",
        "example" : 4654
      },
      "Review" : {
        "type" : "object",
        "required" : [ "review_id", "overall_rating", "price_rating", "quality_rating", "clenliness_rating", "review_body", "likes" ],
        "properties" : {
          "review_id" : {
            "$ref" : "#/components/schemas/review_id"
          },
          "overall_rating" : {
            "$ref" : "#/components/schemas/overall_rating"
          },
          "price_rating" : {
            "$ref" : "#/components/schemas/price_rating"
          },
          "quality_rating" : {
            "$ref" : "#/components/schemas/quality_rating"
          },
          "clenliness_rating" : {
            "$ref" : "#/components/schemas/clenliness_rating"
          },
          "review_body" : {
            "$ref" : "#/components/schemas/review_body"
          },
          "likes" : {
            "$ref" : "#/components/schemas/likes"
          }
        }
      },
      "AddReview" : {
        "type" : "object",
        "required" : [ "overall_rating", "price_rating", "quality_rating", "clenliness_rating", "review_body" ],
        "properties" : {
          "overall_rating" : {
            "$ref" : "#/components/schemas/overall_rating"
          },
          "price_rating" : {
            "$ref" : "#/components/schemas/price_rating"
          },
          "quality_rating" : {
            "$ref" : "#/components/schemas/quality_rating"
          },
          "clenliness_rating" : {
            "$ref" : "#/components/schemas/clenliness_rating"
          },
          "review_body" : {
            "$ref" : "#/components/schemas/review_body"
          }
        }
      },
      "UpdateReview" : {
        "type" : "object",
        "properties" : {
          "overall_rating" : {
            "$ref" : "#/components/schemas/overall_rating"
          },
          "price_rating" : {
            "$ref" : "#/components/schemas/price_rating"
          },
          "quality_rating" : {
            "$ref" : "#/components/schemas/quality_rating"
          },
          "clenliness_rating" : {
            "$ref" : "#/components/schemas/clenliness_rating"
          },
          "review_body" : {
            "$ref" : "#/components/schemas/review_body"
          }
        }
      },
      "ListReviews" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Review"
        }
      },
      "ReviewWithLocation" : {
        "type" : "object",
        "properties" : {
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationWithoutReview"
          }
        }
      },
      "ListReviewsWithLocation" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ReviewWithLocation"
        }
      },
      "user_id" : {
        "type" : "integer",
        "example" : 14
      },
      "first_name" : {
        "type" : "string",
        "example" : "Ashley"
      },
      "last_name" : {
        "type" : "string",
        "example" : "Williams"
      },
      "email" : {
        "type" : "string",
        "format" : "email",
        "example" : "ashley.williams@mmu.ac.uk"
      },
      "password" : {
        "type" : "string",
        "example" : "hello123"
      },
      "session_token" : {
        "type" : "string",
        "example" : "b5d9e7be6c97aa855f721b6e742120f2"
      },
      "AddUser" : {
        "type" : "object",
        "required" : [ "first_name", "last_name", "email", "password" ],
        "properties" : {
          "first_name" : {
            "$ref" : "#/components/schemas/first_name"
          },
          "last_name" : {
            "$ref" : "#/components/schemas/last_name"
          },
          "email" : {
            "$ref" : "#/components/schemas/email"
          },
          "password" : {
            "$ref" : "#/components/schemas/password"
          }
        }
      },
      "LoginUser" : {
        "type" : "object",
        "required" : [ "email", "password" ],
        "properties" : {
          "email" : {
            "$ref" : "#/components/schemas/email"
          },
          "password" : {
            "$ref" : "#/components/schemas/password"
          }
        }
      },
      "LoginResponse" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "$ref" : "#/components/schemas/user_id"
          },
          "session_token" : {
            "$ref" : "#/components/schemas/session_token"
          }
        }
      },
      "SignUpResponse" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "$ref" : "#/components/schemas/user_id"
          }
        }
      },
      "FullUser" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "$ref" : "#/components/schemas/user_id"
          },
          "first_name" : {
            "$ref" : "#/components/schemas/first_name"
          },
          "last_name" : {
            "$ref" : "#/components/schemas/last_name"
          },
          "email" : {
            "$ref" : "#/components/schemas/email"
          },
          "favourite_locations" : {
            "$ref" : "#/components/schemas/ListLocatons"
          },
          "reviews" : {
            "$ref" : "#/components/schemas/ListReviewsWithLocation"
          },
          "liked_reviews" : {
            "$ref" : "#/components/schemas/ListReviewsWithLocation"
          }
        }
      },
      "UpdateUser" : {
        "type" : "object",
        "properties" : {
          "first_name" : {
            "$ref" : "#/components/schemas/first_name"
          },
          "last_name" : {
            "$ref" : "#/components/schemas/last_name"
          },
          "email" : {
            "$ref" : "#/components/schemas/email"
          },
          "password" : {
            "$ref" : "#/components/schemas/password"
          }
        }
      },
      "BinaryImageFile" : {
        "type" : "string",
        "format" : "binary",
        "description" : "The raw content of the JPEG or PNG image file.",
        "example" : "Raw content of JPEG or PNG image file."
      }
    },
    "securitySchemes" : {
      "User" : {
        "type" : "apiKey",
        "name" : "X-Authorization",
        "in" : "header"
      }
    }
  }
}